

@mixin flex($direction: row, $wrap: nowrap, $gap:0, $align: '', $justify: '') {
  display: flex;
  gap: $gap;
  flex-direction: $direction;
  flex-wrap: $wrap;

  @if $align !='' {
    align-items: $align;
  }

  @if $justify !='' {
    justify-content: $justify;
  }

}

// flex, grid, position, width height border radius, font, padding, margin,...

@mixin hoverTransition($color, $backgroundColor: '') {

  transition: all 0.3s linear;

  &:hover {
    color: $color;

    @if $backgroundColor !='' {
      background-color: $backgroundColor;
    }
    cursor: pointer;
    box-shadow: 0.1em 0.1em 1em rgba($white, 0.3);
  }
}


$breakpoints: (smallphone-and-down: "(max-width: 399px)",
  phone-and-down: "(max-width: 575px)",
  tablet-and-down: "(max-width: 767px)",
  desktop-and-down: "(max-width: 991px)",
  largedesktop-and-down: "(max-width: 1199px)",
  extralarge-and-down: "(max-width: 1439px)",
  smallphone-and-up: "(min-width: 400px)",
  phone-and-up: "(min-width: 576px)",
  tablet-and-up: "(min-width: 768px)",
  desktop-and-up: "(min-width: 992px)",
  largedesktop-and-up: "(min-width: 1200px)",
  extralarge-and-up: "(min-width: 1440px)",
);

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(type-of($raw-query)=="string", unquote($raw-query), inspect($raw-query));

    @media #{$query} {
      @content;
    }
  }
}